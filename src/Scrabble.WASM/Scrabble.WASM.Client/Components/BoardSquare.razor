<style>
    .dropzone {
        display: flex;
        justify-content: center;
        align-items: center;
        border: 2px solid var(--mud-border-lines-default);
        height: 64px;
        width: 64px;
        font-family: 'Times New Roman', Times, serif; /* Classic font style */
        font-size: 0.75em;
        color: #000; /* Black color for labels */
        text-align: center;
        box-sizing: border-box;
    }

    .dropzone::before {
        content: attr(data-label);
        position: absolute;
        top: 5px;
        left: 5px;
        font-size: 0.75em;
        color: rgba(0, 0, 0, 0.6); /* Semi-transparent black */
    }

    .dropzone-dragging {
        background-color: var(--mud-theme-success);
    }

    .square-dl {
        background-color: #add8e6; /* Light blue */
    }

    .square-dw {
        background-color: #fa8072; /* Light red */
    }

    .square-tl {
        background-color: #4682b4; /* Darker blue */
    }

    .square-tw {
        background-color: #dc143c; /* Darker red */
    }

    .square-start {
        background-color: #ffffcc; /* Light yellow */
    }

    .square-default {
        background-color: #f4f4f4; /* Light gray */
    }

    .dropzone, .square-dl, .square-dw, .square-tl, .square-tw, .square-start, .square-default {
        border: 1px solid #d3d3d3; /* Light gray border */
    }
</style>


<MudDropZone T="DropSquare"
             Identifier="@squareId"
             DraggingClass="dropzone-dragging"
             Class="@($"dropzone {GetSquareClass(squareType)}")"
             data-label="@(squareType != SquareType.reg ? squareType.ToString() : string.Empty)" />

@code {

    [Parameter]
    public SquareType squareType { get; set; }

    [Parameter]
    public string squareId { get; set; } 

    static string GetSquareClass(SquareType st)
    {
        return st switch
        {
            SquareType.dl => "square-dl",
            SquareType.dw => "square-dw",
            SquareType.tl => "square-tl",
            SquareType.tw => "square-tw",
            SquareType.start => "square-start",
            _ => "square-default"
        };
    }

}