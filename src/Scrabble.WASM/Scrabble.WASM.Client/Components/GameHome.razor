@inject Services.GameService GameService

<div>
    <label>Valid State? </label>
    <span>@(IsBoardValid ? "Yes" : "No")</span>
</div>
<div>
    <label>Player</label>
    <span>@(currentPlayer == 0 ? "One" : "Two")</span>
</div>

<GameControl></GameControl>
<GameBoard board="@board" rack="@rack" ></GameBoard>

@code {
    private static Lexicon lexicon = new Lexicon();

    private Board board = new((s) => true);
    private Rack rack = new();

    private Move? currentMove;

    private int currentPlayer = 0;

    private bool IsBoardValid = true;

    protected override void OnInitialized()
    {
        GameService.OnMoveRequest += HandleMoveButtonClicked;

        var tiles = new List<TilePlacement>
            {
                new(new Coord(R._8, C.H), new Tile('B')),
                new(new Coord(R._8, C.I), new Tile('A')),
                new(new Coord(R._8, C.J), new Tile('L')),
                new(new Coord(R._8, C.K), new Tile('L'))
            };
        board.MakeMove(MoveFactory.CreateMove(tiles));

        var initialTiles = new List<Domain.Tile> { new('X'), new('Y') };
        rack = rack.AddTiles(initialTiles);
    }

    private async Task HandleMoveButtonClicked()
    {
        //
        // see if game is over
        // replace used tiles on rack
        //
         await InvokeAsync(StateHasChanged);
    }

    public void Dispose()
    {
         GameService.OnMoveRequest -= HandleMoveButtonClicked;
    }

    private void HandleMoveSubmitted(ScrabbleMove move)
    {
        var startFrom = new Coord((R)move.StartRow, (C)move.StartColumn);
        var tiles = move.Letters.Select(letter => new Domain.Tile(letter)).ToList();
        currentMove = MoveFactory.CreateMove(startFrom, tiles, move.IsHorizontal);

        //IsBoardValid = currentBoard.IsMoveValid()

        board = board.MakeMove(currentMove);

        StateHasChanged();
    }

    private void HandleSquareClicked(Coord coord)
    {
        // Handle the square click event here
        Console.WriteLine($"Square at Row: {coord.RVal} Col:{coord.CVal} clicked.");
    }

    private void MakeMove()
    {
        Console.WriteLine("Make Move");
    }
}
