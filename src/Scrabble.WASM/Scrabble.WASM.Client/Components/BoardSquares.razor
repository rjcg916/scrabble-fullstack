<div class="tile-board">
    <h3>Board</h3>
    @for (int r = 0; r < 15; r++)
    {
        <div class="d-flex">
            @for (int c = 0; c < 15; c++)
            {
                var squareType = board.squares[r, c].SquareType;
                <BoardSquare squareId="@ToId(r,c)"></BoardSquare>
            }
        </div>
    }
</div>

@code {
    [Parameter] public Board board { get; set; }
    [Parameter] public List<DropSquare> tiles { get; set; }
    [Parameter] public Func<int, int, string> ToId { get; set; }

    protected override void OnInitialized()
    {
        for (int r = 0; r < Coord.RowCount; r++)
        {
            for (int c = 0; c < Coord.ColCount; c++)
            {
                var square = board.squares[r, c];

                if (square.IsOccupied)
                {
                    tiles.Add(
                             new DropSquare()
                                 {
                                     Name = square.Tile.Letter,
                                     Identifier = $"{ToId(r, c)}",
                                     Value = square.Tile.Value,
                                     IsLocked = true
                                 });
                }
            }
        }
    }


}
