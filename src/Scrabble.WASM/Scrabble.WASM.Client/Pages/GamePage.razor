@page "/"

<PageTitle>Scrabble</PageTitle>

<MudButton OnClick="ProcessCurrentMove">Make Move</MudButton>

<GameBoard  
            rack="@rack" 
            board="@board" 
            CurrentPlayer="@currentPlayer"
            CurrentMoveChanged="OnCurrentMoveChanged">
</GameBoard>

@code {

    private TileBag tileBag = TileBag.TileBagFactory.Create();

    private Rack rack = new Rack();

    private Board board = new((s) => true);

    private Move currentMove;

    private int currentPlayer = 0;

    protected override void OnInitialized()
    {
        (tileBag, rack) = FillRack(tileBag, rack);     
    }

    private void OnCurrentMoveChanged(Move move)
    {
        currentMove = move;
    }

    private void ProcessCurrentMove()
    {
        if (currentMove != null)
        {
            // make the move
            board = board.MakeMove(currentMove);

            // remove tiles used in move
            rack = rack.RemoveTiles(currentMove.TilePlacements.Select(x => x.Tile));

            // add replacement tiles
            (tileBag, rack) = FillRack(tileBag, rack);

            // update player
            currentPlayer = (currentPlayer + 1) % 2; //todo
        }
    }

    private static (TileBag, Rack) FillRack(TileBag tileBag, Rack rack) {
        List<Tile> tiles;
        (tiles, tileBag) = tileBag.DrawTiles(new TileDrawCount(Rack.Capacity - rack.TileCount));
        return (tileBag, rack.AddTiles(tiles));
    }
}
